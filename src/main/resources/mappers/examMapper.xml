<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.astraltear.mapper.examMapper">
	<select id="getTime" resultType="string">
		select now()
	</select>

	<select id="selectBasic" resultType="MemberVO">
		select *
		from tbl_member
		where userid=#{userid}
	</select>

	<insert id="insertMember">
		insert into tbl_member(userid,userpw,username,email)
		values( #{userid},#{userpw},#{username},#{email}
		)
	</insert>

	<insert id="multiInsert">
		insert into tbl_member(userid,userpw,username,email)
		values
		<foreach item="item" collection="list" separator=" , ">
			(
			#{item.userid},#{item.userpw},#{item.username},#{item.email})
		</foreach>
	</insert>

	<insert id="multiInsertAI" useGeneratedKeys="true" keyProperty="userpk">
		insert into tbl_member_ai(userid,userpw,username,email)
		values
		<foreach item="item" collection="list" separator=" , ">
			(
			#{item.userid},#{item.userpw},#{item.username},#{item.email})
		</foreach>
	</insert>


	<insert id="selectKeyInsert">
		<selectKey keyProperty="userid" resultType="java.lang.String" order="BEFORE">
			SELECT CONCAT(CAST(RAND() * 1000 AS
			SIGNED) + 1,'KEY')
		</selectKey>
		insert into tbl_member(userid,userpw,username,email)
		values
		(#{userid},#{userpw},#{username},#{email})
	</insert>


	<select id="selectIF" resultType="MemberVO">
		select *
		from tbl_member
		<if test="userid !=null">
			where userid=#{userid}
		</if>
		<if test="userid !=null and userpw!= null">
			where userid=#{userid} and userpw=#{userpw}
		</if>
	</select>

	<select id="selectChoose" resultType="MemberVO">
		select *
		from tbl_member

		<choose>
			<when test="userid !=null">
				where userid=#{userid}
			</when>
			<when test="userid !=null and userpw!= null">
				where userid=#{userid} and userpw=#{userpw}
			</when>
			<otherwise>

			</otherwise>
		</choose>
	</select>

	<select id="selectWhere" resultType="MemberVO">
		select *
		from tbl_member
		<where>
			<if test="userid !=null">
				userid=#{userid}
			</if>
			<if test="userpw!= null">
				and userpw=#{userpw}
			</if>
			<if test="username != null">
				AND username like #{username}
			</if>
		</where>
	</select>

	<select id="selectTrim" resultType="MemberVO">
		select *
		from tbl_member
		<trim prefix="WHERE" prefixOverrides="AND"><!-- prefixOverrides="AND |OR " -->
			<if test="userid !=null">
				AND userid=#{userid}
			</if>
			<if test="userpw!= null">
				AND userpw=#{userpw}
			</if>
			<if test="username != null">
				AND username like #{username}
			</if>
		</trim>
	</select>

	<update id="updateIfNecessary">
		update tbl_member
		<set>
			<if test="userpw!= null">userpw=#{userpw},</if>
			<if test="username != null">username=#{username},</if>
		</set>
		where userid=#{userid}
	</update>

	<select id="selectForeach" resultType="MemberVO">
		select *
		from tbl_member
		where userid in
		<foreach collection="list" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

</mapper>